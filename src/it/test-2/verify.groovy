
/**
 * original model is as expected
 */

File originalPom = new File( basedir, 'pom.xml' )
assert originalPom.exists()

def originalProject = new XmlSlurper().parse( originalPom )

assert 'com.carrotgarden.maven' == originalProject.groupId.text()
assert 'flatten-maven-plugin-test-2' == originalProject.artifactId.text()
assert '${revision}' == originalProject.version.text()

assert 1 == originalProject.url.size()
assert 1 == originalProject.build.size()
assert 1 == originalProject.properties.size()
assert 2 == originalProject.dependencies.dependency.size()

/**
 * flattened model has new identity
 */

File flattenedPom = new File( basedir, 'pom.xml.flatten' )
assert flattenedPom.exists()

def flattenedProject = new XmlSlurper().parse( flattenedPom )

assert 'com.carrotgarden.maven' == flattenedProject.groupId.text()
assert 'flatten-maven-plugin-test-2_2.12' == flattenedProject.artifactId.text()
assert flattenedProject.version.text().startsWith('1.2.3')

assert 1 == flattenedProject.url.size()
assert 0 == flattenedProject.build.size()
assert 0 == flattenedProject.properties.size()
assert 8 == flattenedProject.dependencies.dependency.size()

// output folder
def buildDir = new File(basedir, 'target').toString()

/**
 * project build files have new identity
 */

def jarRx = /flatten-maven-plugin-test-2_2.12-[0-9.]+.jar/
def nameList = new FileNameByRegexFinder().getFileNames( buildDir, jarRx)
assert 1 == nameList.size()

/**
 * repository files have new identity
 */

// generated by package/jar after prepare-package/flatten
def mavenFile = new File(buildDir, 'maven-archiver/pom.properties')
assert mavenFile.exists()

def mavenProps = new Properties()
mavenFile.withInputStream { mavenProps.load(it) }

def mavenGroupId = mavenProps['groupId']
def mavenArtifactId = mavenProps['artifactId']
def mavenVersion = mavenProps['version']
def mavenFinalName = mavenArtifactId + '-' + mavenVersion

assert 'com.carrotgarden.maven' == mavenGroupId
assert 'flatten-maven-plugin-test-2_2.12' == mavenArtifactId
assert mavenVersion.startsWith('1.2.3')

//  <localRepositoryPath>${env.HOME}/.m2/repository-test/${project.artifactId}</localRepositoryPath>
def repoDir = new File("${System.getenv('HOME')}/.m2/repository-test/flatten-maven-plugin")
assert repoDir.exists()

// com/carrotgarden/maven/flatten-maven-plugin-test-2_2.12/1.2.3.20171205155241
def repoGAV = new File(repoDir, "${mavenGroupId.replaceAll('[.]','/')}/${mavenArtifactId}/${mavenVersion}")
assert repoGAV.exists()

def repoPom = new File(repoGAV, "${mavenFinalName}.pom")
assert repoPom.exists()

def repoJar = new File(repoGAV, "${mavenFinalName}.jar")
assert repoJar.exists()

def repoSourcesJar = new File(repoGAV, "${mavenFinalName}-sources.jar")
assert repoSourcesJar.exists()

def repoJavadocJar = new File(repoGAV, "${mavenFinalName}-javadoc.jar")
assert repoJavadocJar.exists()
